{"version":3,"sources":["consts/shadowbox.ts","consts/colors.ts","consts/endPoint.ts","actions/types.ts","actions/user.ts","components/LeftSideBar/LogoutButton/presenter.tsx","components/LeftSideBar/LogoutButton/index.ts","actions/workspace.ts","components/LeftSideBar/Button/presenter.tsx","components/LeftSideBar/Button/index.ts","components/LeftSideBar/presenter.tsx","components/LeftSideBar/index.tsx","actions/leftNavigationBar.ts","components/MainPage/MainContents/NavigationToggleButton/presenter.tsx","components/MainPage/MainContents/NavigationToggleButton/index.ts","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Header/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Header/index.ts","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Body/PrayCell/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Body/PrayCell/index.ts","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Body/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Body/index.ts","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Bottom/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/Bottom/index.ts","actions/todayPrayForPost.ts","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/StudentPray/index.ts","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/Header/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/Header/index.ts","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/Body/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/Body/index.ts","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/Bottom/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/Bottom/index.ts","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/TodayPray/index.ts","components/MainPage/MainContents/PostWorkspace/Left/Ads/Header/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/Ads/Header/index.ts","components/MainPage/MainContents/PostWorkspace/Left/Ads/Body/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/Ads/Body/index.ts","components/MainPage/MainContents/PostWorkspace/Left/Ads/Bottom/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/Ads/Bottom/index.ts","components/MainPage/MainContents/PostWorkspace/Left/Ads/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/Ads/index.ts","components/MainPage/MainContents/PostWorkspace/Left/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Left/index.ts","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/StudentPray/Card/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/StudentPray/Card/index.ts","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/StudentPray/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/StudentPray/index.ts","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/TodayPray/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/TodayPray/index.ts","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/Ads/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/Ads/index.ts","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/Card/Body/index.ts","actions/datepicker.ts","components/MainPage/MainContents/PostWorkspace/Right/Card/Bottom/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/Card/Bottom/index.ts","components/MainPage/MainContents/PostWorkspace/Right/Card/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/Card/index.ts","components/MainPage/MainContents/PostWorkspace/Right/presenter.tsx","components/MainPage/MainContents/PostWorkspace/Right/index.ts","components/MainPage/MainContents/PostWorkspace/presenter.tsx","components/MainPage/MainContents/PostWorkspace/index.ts","actions/todayPrayForView.ts","actions/todayPrayDetail.ts","components/MainPage/MainContents/ViewWorkspace/Container/Card/presenter.tsx","components/MainPage/MainContents/ViewWorkspace/Container/Card/index.ts","components/MainPage/MainContents/ViewWorkspace/Container/presenter.tsx","components/MainPage/MainContents/ViewWorkspace/Container/index.ts","components/MainPage/MainContents/ViewWorkspace/presenter.tsx","components/MainPage/MainContents/ViewWorkspace/index.ts","components/MainPage/MainContents/presenter.tsx","components/MainPage/MainContents/index.ts","components/MainPage/presenter.tsx","components/MainPage/index.tsx","routes/privateRoute.tsx","components/LoginPage/Body/Card/Header/presenter.tsx","components/LoginPage/Body/Card/Header/index.ts","components/LoginPage/Body/Card/Body/presenter.tsx","components/LoginPage/Body/Card/Body/index.ts","components/LoginPage/Body/Card/Bottom/presenter.tsx","components/LoginPage/Body/Card/Bottom/index.ts","components/LoginPage/Body/Card/presenter.tsx","components/LoginPage/Body/Card/index.ts","components/LoginPage/Body/presenter.tsx","components/LoginPage/Body/index.ts","components/LoginPage/presenter.tsx","components/LoginPage/index.ts","routes/publicRoute.tsx","actions/dialog.ts","components/Dialog/index.ts","components/Dialog/presenter.tsx","components/Loading/presenter.tsx","components/Loading/index.ts","components/DatePicker/Bottom/presenter.tsx","components/DatePicker/Bottom/index.ts","components/DatePicker/presenter.tsx","components/DatePicker/index.ts","components/CardDetailComponent/Content/Header/presenter.tsx","components/CardDetailComponent/Content/Header/index.ts","components/CardDetailComponent/Content/Title/presenter.tsx","components/CardDetailComponent/Content/Title/index.ts","components/CardDetailComponent/Content/Body/StudentPrays/Card/presenter.tsx","components/CardDetailComponent/Content/Body/StudentPrays/Card/index.ts","components/CardDetailComponent/Content/Body/StudentPrays/presenter.tsx","components/CardDetailComponent/Content/Body/StudentPrays/index.ts","components/CardDetailComponent/Content/Body/TodayPrayContents/presenter.tsx","components/CardDetailComponent/Content/Body/TodayPrayContents/index.ts","components/CardDetailComponent/Content/Body/Ads/presenter.tsx","components/CardDetailComponent/Content/Body/Ads/index.ts","components/CardDetailComponent/Content/Body/presenter.tsx","components/CardDetailComponent/Content/Body/index.ts","components/CardDetailComponent/Content/presenter.tsx","components/CardDetailComponent/Content/index.ts","components/CardDetailComponent/presenter.tsx","components/CardDetailComponent/index.ts","App.tsx","reducer/user.ts","reducer/dialog.ts","reducer/loading.ts","reducer/leftNavigationBar.ts","reducer/location.ts","reducer/workspace.ts","reducer/todayPrayForPost.ts","reducer/todayPrayForView.ts","reducer/datepicker.ts","reducer/todayPrayDetail.ts","reducer/index.ts","serviceWorker.ts","index.tsx"],"names":["ShadowBoxType","typeOne","typeTwo","COLORS","electronBlue","blurPle","weakGray","almostWhite","DONGGYU_ENDPOINT","userLogout","dispatch","type","userLogin","email","password","axios","post","then","res","data","ok","error","token","user","title","text","callBack","catch","err","console","log","window","location","href","Container","styled","div","LogoutButton","userLogoutDispatch","useDispatch","onClick","putWorkspaceCurrent","newCurrent","props","activated","Button","label","name","useState","setActivated","workspaceReducer","useSelector","state","workspace","workspaceDispatch","currentWorkspace","current","useEffect","Opening","keyframes","Closing","ContainerOpening","ContainerClosing","LeftSideBar","sideNaviReducer","leftNavigationBar","open","first","leftNaviOpen","leftNaviClose","ChevronRight","i","TurningLeft","ChevronTurningLeft","TurningRight","ChevronTurningRight","NavigationToggleButton","leftNavDispatch","LeftSideBarReducer","turnDownSideBar","className","Header","studentPray","handleStudentGrade","handleStudentName","TextField","style","marginRight","id","value","variant","onChange","width","grade","PrayCell","pray","PrayCellContainer","Body","handlePray","prayOnEnterKeyDown","onKeyPress","prays","map","key","Bottom","submitButtonClicked","color","PostTodayPrayToServer","todayPray","date","ads","todayPrayContent","headers","authentication","localStorage","getItem","postAds","postTodayPray","todayPrays","deleteStudentPray","index","postStudentPray","Card","StudentPray","setPray","postStudentPrayDispatch","setStudentPray","animateScroll","scrollToBottom","containerId","event","target","parseInt","newPray","handleTodayPray","onEnterPress","Text","addButtonClikced","TodayPray","setPrays","postTodayPrayDispatch","ad","handleInput","handleKeyPress","Cell","addButtonClicked","Ads","setAds","setAd","postAdsDispatch","Left","DeleteButton","Name","PraysContainer","Pray","deleteStudentPrayDispatch","Label","StudentPrayReducer","todayPrayForPost","oneStudentPray","todayPrayReducer","AdsReducer","closeDatePicker","openDatePicker","datePickerDispatch","height","Right","PostWorkspace","initPrays","getPrays","page","get","praysCount","close","TextContainer","Date","WriterName","PrayContents","openTodayPrayDetailDispatch","_id","moment","format","writer","alignItems","content","gridTemplateColumns","CardsContainer","gridTemplateColumn","setGridTemplateColumn","praysForViewReducer","todayPrayForView","getPraysDispatch","totalPraysNumber","currentPraysNumber","length","onBottom","scrollRef","ref","ViewWorkspace","setPage","initDispatch","handleWidth","handleHeight","Main","workspaceCurrent","MainPage","PrivateRouteComponent","BigText","SmallText","Row","ButtonContainer","loginButtonClicked","setEmail","setPassword","userLoginDispatch","LoginPage","PublicRouteComponent","exact","path","dialogOff","dialogOn","Dialog","dialogReducer","dialog","dialogOffDispatch","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Loading","selectedDate","closeDatePickerDispatch","postTodayPrayToServerDispatch","dialogDispatch","getTime","toString","DatePicker","React","setSelectedDate","locale","enUS","utils","DateFnsUtils","margin","KeyboardButtonProps","dateObj","year","getFullYear","month","getMonth","day","getDate","Title","writerName","Writer","DotContainer","Dot","StudentPrays","studentPrays","TodayPrayContents","AdsContainer","Ad","Content","FromBottomToTop","FromTopToBottom","DisappearingCard","CardDetailComponent","disappearing","setDisappearing","prayObj","setPrayObj","wrappedRef","useRef","closeDispatch","todayPrayDetailReducer","todayPrayDetail","handleClickOutside","contains","setTimeout","document","addEventListener","removeEventListener","useOutsideAlerter","App","isLoggedIn","loading","datePicker","datepicker","initialState","phone","authorities","action","removeItem","setItem","loadingOn","loadingOff","openNav","closeNav","putCurrent","postTodayPrays","updatedStudentPrays","filter","allReducers","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.372e6308.chunk.js","sourcesContent":["const ShadowBoxType = {\n    typeOne: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n    typeTwo: '0px 2px 1px -1px rgba(255,255,255,0.2), 0px 1px 1px 0px rgba(255,255,255,0.14), 0px 1px 3px 0px rgba(255,255,255,0.12)'\n}\n\nexport default ShadowBoxType","const ELECTRON_BLUE = '#816bff'\nconst BLURPLE = '#4834d4'\nconst ANTI_FALSH_WHITE = '#dfe4ea'\nconst ALMOST_WHITE = '#F9F9F9'\n\nconst COLORS = {\n    electronBlue: ELECTRON_BLUE,\n    blurPle: BLURPLE,\n    weakGray: ANTI_FALSH_WHITE,\n    almostWhite: ALMOST_WHITE\n}\n\nexport default COLORS","export let DONGGYU_ENDPOINT = '220.67.154.77:4001/api/'\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    // dev code\n    DONGGYU_ENDPOINT = 'http://localhost:4001/api/'\n} else {\n    DONGGYU_ENDPOINT = 'https://pray.kbucard.com:4001/api/'\n}\n\n","export const DIALOG_ON = 'DIALOG_ON'\nexport const DIALOG_OFF = 'DIALOG_OFF'\n\n\nexport const USER_LOGIN = 'USER_LOGIN'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const LOADING_ON = 'LOADING_ON'\nexport const LOADING_OFF = 'LOADING_OFF'\n\nexport const LEFT_NAV_OPEN = 'LEFT_NAV_OPEN'\nexport const LEFT_NAV_CLOSE = 'LEFT_NAV_CLOSE'\n\nexport const WORKSPACE_PUT_CURRENT = 'WORKSPACE_PUT_CURRENT'\n\nexport const TODAY_PRAY_FOR_POST_POST_STUDENT_PRAY = 'TODAY_PRAY_FOR_POST_POST_STUDENT_PRAY'\nexport const TODAY_PRAY_FOR_POST_DELETE_STUDENT_PRAY = 'TODAY_PRAY_FOR_POST_DELETE_STUDENT_PRAY'\nexport const TODAY_PRAY_FOR_POST_POST_TODAY_PRAY = 'TODAY_PRAY_FOR_POST_POST_TODAY_PRAY'\nexport const TODAY_PRAY_FOR_POST_POST_ADS = 'TODAY_PRAY_FOR_POST_POST_ADS'\nexport const TODAY_PRAY_FOR_POST_INIT = 'TODAY_PRAY_FOR_POST_INIT'\n\nexport const TODAY_PRAY_FOR_VIEW_INIT = 'TODAY_PRAY_FOR_VIEW_INIT'\nexport const TODAY_PRAY_FOR_VIEW_GET_PRAYS = 'TODAY_PRAY_FOR_VIEW_GET_PRAYS'\n\nexport const DATEPICKER_OPEN = 'DATEPICKER_OPEN'\nexport const DATEPICKER_CLOSE = 'DATEPICKER_CLOSE'\n\nexport const TODAY_PRAY_DETAIL_OPEN = 'TODAY_PRAY_DETAIL_OPEN'\nexport const TODAY_PRAY_DETAIL_CLOSE = 'TODAY_PRAY_DETAIL_CLOSE'","import { Dispatch } from \"react\";\nimport axios from 'axios'\nimport { DONGGYU_ENDPOINT } from \"../consts/endPoint\";\nimport { ReducerUserType } from \"../types/reducer\";\nimport { DIALOG_ON, USER_LOGIN, LOADING_ON, LOADING_OFF, USER_LOGOUT } from \"./types\";\n\ninterface IUserLogoutDispatch {\n    type: string\n}\n\nexport const userLogout = (dispatch: Dispatch<IUserLogoutDispatch>) => {\n    dispatch({\n        type: USER_LOGOUT\n    })\n}\n\ninterface IUserLoginDispatch {\n    type: string\n    title?: string\n    text?: string\n    callBack?: (param: any) => void\n    token?: string\n    user?: ReducerUserType\n}\n\ninterface IUserLoginData {\n    ok: boolean\n    error: string\n    token: string\n    user: ReducerUserType\n}\n\nexport const userLogin = (email: string, password: string, dispatch: Dispatch<IUserLoginDispatch>) => {\n    dispatch({\n        type: LOADING_ON\n    })\n    axios.post(`${DONGGYU_ENDPOINT}user/login`, {\n        email,\n        password\n    })\n        .then(res => res.data)\n        .then(data => {\n            const {\n                ok,\n                error,\n                token,\n                user\n            }: IUserLoginData = data\n            if (ok) {\n                dispatch({\n                    type: USER_LOGIN,\n                    token,\n                    user\n                })\n            } else {\n                dispatch({\n                    type: DIALOG_ON,\n                    title: \"알림\",\n                    text: error,\n                    callBack: () => { }\n                })\n            }\n            dispatch({\n                type: LOADING_OFF\n            })\n        })\n        .catch(err => {\n            console.log(`Error occred at action/user.ts userLogin Func`)\n            console.error(err)\n            dispatch({\n                type: LOADING_OFF\n            })\n            dispatch({\n                type: DIALOG_ON,\n                title: \"에러발생\",\n                text: \"예기치 못한 서버에러가 발생하였습니다. 관리자에게 문의해주세요. \",\n                callBack: () => {\n                    window.location.href = '/'\n                }\n            })\n        })\n}","import React, { Dispatch } from 'react'\nimport styled from 'styled-components'\nimport ShadowBoxType from '../../../consts/shadowbox'\nimport { useDispatch } from 'react-redux'\nimport { userLogout } from '../../../actions/user'\n\nconst Container = styled.div`\n    bottom: 0;\n    position: absolute;\n    width: 100%;\n    height: 110px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    box-shadow:${ShadowBoxType.typeTwo};\n    cursor: pointer;\n    font-size:20px;\n`\n\ninterface IUserLogoutDispatch {\n    type: string\n}\n\nconst Presenter: React.FC = () => {\n\n    const userLogoutDispatch = useDispatch<Dispatch<IUserLogoutDispatch>>()\n\n    return <Container onClick={logoutButtonClicked}>\n        LOGOUT\n    </Container>\n\n    function logoutButtonClicked() {\n        userLogout(userLogoutDispatch)\n    }\n}\n\nexport default Presenter","import LogoutButton from './presenter'\nexport default LogoutButton","import { CURRENT_TYPE } from '../types/reducer'\nimport { WORKSPACE_PUT_CURRENT } from './types'\nimport { Dispatch } from 'react'\n\ninterface IPutWorkspaceCurrent {\n    type: string\n    newCurrent: CURRENT_TYPE\n}\n\nexport const putWorkspaceCurrent = (newCurrent: CURRENT_TYPE, dispatch: Dispatch<IPutWorkspaceCurrent>) => {\n    dispatch({\n        type: WORKSPACE_PUT_CURRENT,\n        newCurrent\n    })\n}","import React, { useState, useEffect, Dispatch } from 'react'\nimport styled from 'styled-components'\nimport { CURRENT_TYPE, ReducerStateType } from '../../../types/reducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport COLORS from '../../../consts/colors'\nimport { putWorkspaceCurrent } from '../../../actions/workspace'\n\ninterface IContainer {\n    activated: boolean\n}\n\nconst Container = styled.div`\n    cursor: pointer;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    font-size:20px;\n    background:${COLORS.electronBlue};\n    opacity:${(props: IContainer) => props.activated ? 1 : 0.5};\n    font-weight:${(props: IContainer) => props.activated ? 600 : 300};\n    transition:0.5s;\n`\n\ninterface IWorkspaceDispatch {\n    type: string\n    newCurrent: CURRENT_TYPE\n}\n\ninterface IProps {\n    label: string\n    name: CURRENT_TYPE\n}\n\nconst Presenter: React.FC<IProps> = ({\n    label,\n    name\n}) => {\n    const [activated, setActivated] = useState(false)\n    const workspaceReducer = useSelector((state: ReducerStateType) => state.workspace)\n    const workspaceDispatch = useDispatch<Dispatch<IWorkspaceDispatch>>()\n    const currentWorkspace = workspaceReducer.current\n    useEffect(() => {\n        if (name === currentWorkspace) {\n            setActivated(true)\n        } else {\n            setActivated(false)\n        }\n    }, [currentWorkspace])\n    return <Container onClick={onButtonClick} activated={activated}>\n        {label}\n    </Container>\n\n    function onButtonClick() {\n        putWorkspaceCurrent(name, workspaceDispatch)\n    }\n}\n\nexport default Presenter","import Button from './presenter'\nexport default Button","import React, { useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport ShadowBoxType from '../../consts/shadowbox'\nimport COLORS from '../../consts/colors'\nimport { useSelector } from 'react-redux'\nimport { ReducerStateType } from '../../types/reducer'\nimport LogoutButton from './LogoutButton'\nimport Button from './Button'\n\nconst Container = styled.div`\n    width:500px;\n    overflow:hidden;\n    height:100%;\n    box-shadow:${ShadowBoxType.typeOne};\n    background:${COLORS.electronBlue};\n    color:white;\n    position:relative;\n    display: grid;\n    grid-auto-rows: 110px;\n`\n\nconst Opening = keyframes`\n    from {\n        width:0px;\n    }\n    to {\n        width:500px;\n    }\n`\n\nconst Closing = keyframes`\n    from {\n        width:500px;\n    }\n    to {\n        width:0px;\n    }\n`\n\nconst ContainerOpening = styled.div`\n    width:500px;\n    overflow:hidden;\n    height:100%;\n    box-shadow:${ShadowBoxType.typeOne};\n    background:${COLORS.electronBlue};\n    color:white;\n    animation:${Opening} 0.5s;\n    position:relative;\n    display: grid;\n    grid-auto-rows: 110px;\n`\n\nconst ContainerClosing = styled.div`\n    width:0px;\n    overflow:hidden;\n    height:100%;\n    box-shadow:${ShadowBoxType.typeOne};\n    background:${COLORS.electronBlue};\n    color:white;\n    animation:${Closing} 0.5s;\n    position:relative;\n    display: grid;\n    grid-auto-rows: 110px;\n`\n\n\n\nconst Presenter: React.FC = () => {\n\n    const sideNaviReducer = useSelector((state: ReducerStateType) => state.leftNavigationBar)\n    const open: boolean = sideNaviReducer.open\n    const first: boolean = sideNaviReducer.first\n    if (first) {\n        return <Container>\n            <Button label=\"POST\" name=\"POST\" />\n            <Button label=\"VIEW\" name=\"VIEW\" />\n            <LogoutButton />\n        </Container>\n\n    } else {\n        if (open) {\n            return <ContainerOpening>\n                <Button label=\"POST\" name=\"POST\" />\n                <Button label=\"VIEW\" name=\"VIEW\" />\n                <LogoutButton />\n            </ContainerOpening>\n        } else {\n            return <ContainerClosing>\n                <Button label=\"POST\" name=\"POST\" />\n                <Button label=\"VIEW\" name=\"VIEW\" />\n                <LogoutButton />\n            </ContainerClosing>\n        }\n    }\n}\n\nexport default Presenter","import LeftSideBar from './presenter'\nexport default LeftSideBar","import { Dispatch } from \"react\";\nimport { LEFT_NAV_OPEN, LEFT_NAV_CLOSE } from \"./types\";\n\ninterface ILeftNaviOpenDispatch {\n    type: string\n}\n\nexport const leftNaviOpen = (dispatch: Dispatch<ILeftNaviOpenDispatch>) => {\n    dispatch({\n        type: LEFT_NAV_OPEN\n    })\n}\n\nexport const leftNaviClose = (dispatch: Dispatch<ILeftNaviOpenDispatch>) => {\n    dispatch({\n        type: LEFT_NAV_CLOSE\n    })\n}","import React, { useState, Dispatch } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ReducerStateType } from '../../../../types/reducer'\nimport { leftNaviOpen, leftNaviClose } from '../../../../actions/leftNavigationBar'\n\nconst Container = styled.div`\n    position:absolute;\n    top:0;\n    left:0;\n    \n`\n\nconst ChevronRight = styled.i`\n    font-size: 20px;\n    padding: 10px;\n    transform:rotate(180deg);\n`\n\nconst TurningLeft = keyframes`\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(180deg);\n    }\n`\n\nconst ChevronTurningLeft = styled.i`\n    font-size: 20px;\n    transform:rotate(180deg);\n    animation:${TurningLeft} 0.5s;\n    padding: 10px;\n`\n\nconst TurningRight = keyframes`\n    from {\n        transform:rotate(180deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n`\n\nconst ChevronTurningRight = styled.i`\n    font-size: 20px;\n    animation:${TurningRight} 0.5s;\n    padding: 10px;\n`\n\ninterface ILeftNavDispatch {\n    type: string\n}\n\n\nconst Presenter: React.FC = () => {\n\n    const leftNavDispatch = useDispatch<Dispatch<ILeftNavDispatch>>()\n\n    const LeftSideBarReducer = useSelector((state: ReducerStateType) => state.leftNavigationBar)\n    const first = LeftSideBarReducer.first\n    const open = LeftSideBarReducer.open\n    return <Container>\n        {first && <ChevronRight onClick={turnDownSideBar} className=\"fas fa-chevron-right\" />}\n        {(!first && open) && <ChevronTurningLeft onClick={turnDownSideBar} className=\"fas fa-chevron-right\" />}\n        {(!first && !open) && <ChevronTurningRight onClick={turnOnSideBar} className=\"fas fa-chevron-right\" />}\n\n    </Container>\n\n    function turnOnSideBar() {\n        leftNaviOpen(leftNavDispatch)\n    }\n\n    function turnDownSideBar() {\n        leftNaviClose(leftNavDispatch)\n    }\n}\n\nexport default Presenter","import NavigationToggleButton from './presenter'\nexport default NavigationToggleButton","import React from 'react'\nimport styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\nimport { ReducerTodayPrayStudentPrayType } from '../../../../../../../types/reducer'\n\nconst Container = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    align-items:center;\n    justify-content:flex-start;\n`\n\ninterface IProps {\n    studentPray: ReducerTodayPrayStudentPrayType\n    handleStudentName: (event: React.ChangeEvent<HTMLInputElement>) => void\n    handleStudentGrade: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    studentPray,\n    handleStudentGrade,\n    handleStudentName\n}) => {\n    return <Container>\n        <TextField\n            style={{\n                marginRight: 20\n            }}\n            id=\"outlined-basic\" value={studentPray.name} label=\"학생 이름\" variant=\"outlined\"\n            onChange={handleStudentName}\n        />\n        <TextField\n            style={{\n                width: 120\n            }}\n            onChange={handleStudentGrade}\n            id=\"outlined-basic\" type=\"number\" value={studentPray.grade} label=\"학생 학년\" variant=\"outlined\" />\n    </Container>\n}\n\nexport default Presenter","import Header from './presenter'\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    padding-top: 7px;\n    padding-bottom: 7px;\n`\n\ninterface IProps {\n    pray: string\n}\n\nconst Presenter: React.FC<IProps> = ({\n    pray\n}) => {\n    return <Container>\n        {pray}\n    </Container>\n}\n\nexport default Presenter","import PrayCell from './presenter'\nexport default PrayCell","import React from 'react'\nimport styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\nimport PrayCell from './PrayCell'\nimport { ReducerTodayPrayStudentPrayType } from '../../../../../../../types/reducer'\n\nconst Container = styled.div`\n    padding-top:20px;\n    display: flex;\n    flex-direction: column;\n    overflow-y:scroll;\n`\n\nconst PrayCellContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    overflow-y:scroll;\n`\n\ninterface IProps {\n    pray: string\n    handlePray: (event: React.ChangeEvent<HTMLInputElement>) => void\n    studentPray: ReducerTodayPrayStudentPrayType\n    prayOnEnterKeyDown: (event: React.KeyboardEvent<HTMLInputElement>) => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    pray,\n    handlePray,\n    studentPray,\n    prayOnEnterKeyDown\n}) => {\n    return <Container >\n        <TextField value={pray} onKeyPress={prayOnEnterKeyDown} onChange={handlePray} id=\"standard-basic\" label=\"학생기도를 입력해주세요\" />\n        <PrayCellContainer id=\"studentPrayBodyContainer\">\n            {studentPray.prays.map((pray, i) => {\n                return <PrayCell pray={pray} key={i} />\n            })}\n        </PrayCellContainer>\n    </Container>\n}\n\nexport default Presenter","import Body from './presenter'\nexport default Body","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\ninterface IProps {\n    submitButtonClicked: () => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    submitButtonClicked\n}) => {\n    return <Container>\n        <Button onClick={submitButtonClicked} variant=\"contained\" color=\"primary\">\n            추가\n</Button>\n    </Container>\n}\n\nexport default Presenter","import Bottom from './presenter'\nexport default Bottom","import { ReducerTodayPrayStudentPrayType, ReducerTodayPray } from '../types/reducer'\nimport { TODAY_PRAY_FOR_POST_POST_STUDENT_PRAY, TODAY_PRAY_FOR_POST_DELETE_STUDENT_PRAY, TODAY_PRAY_FOR_POST_POST_TODAY_PRAY, TODAY_PRAY_FOR_POST_POST_ADS, TODAY_PRAY_FOR_POST_INIT, LOADING_ON, DIALOG_ON, LOADING_OFF, DATEPICKER_CLOSE } from './types'\nimport { Dispatch } from 'react'\nimport axios from 'axios'\nimport { DONGGYU_ENDPOINT } from '../consts/endPoint'\n\nexport interface IPostTodayPrayToServerDispatch {\n    type: string\n    title?: string\n    text?: string\n    callBack?: () => void\n}\n\ninterface IPostTodayPrayToServerData {\n    ok: boolean\n    error: string\n    todayPray: ReducerTodayPray\n}\n\nexport const PostTodayPrayToServer = (todayPray: ReducerTodayPray, date: string, dispatch: Dispatch<IPostTodayPrayToServerDispatch>) => {\n\n\n    dispatch({\n        type: LOADING_ON\n    })\n    axios.post(`${DONGGYU_ENDPOINT}todaypray/${date}`, {\n        studentPray: todayPray.studentPray,\n        ads: todayPray.ads,\n        todayPrayContent: todayPray.todayPrayContent\n    }, {\n        headers: {\n            authentication: localStorage.getItem('token')\n        }\n    })\n        .then(res => res.data)\n        .then(data => {\n            const { ok, error, todayPray } = data as IPostTodayPrayToServerData\n            if (ok) {\n                dispatch({\n                    type: LOADING_OFF\n                })\n                dispatch({\n                    type: TODAY_PRAY_FOR_POST_INIT\n                })\n                dispatch({\n                    type: DIALOG_ON,\n                    title: \"업로드 완료\",\n                    text: \"업로드를 성공하였습니다\"\n                })\n                dispatch({\n                    type: DATEPICKER_CLOSE\n                })\n                console.log(todayPray, ' 업로드 완료')\n            } else {\n                dispatch({\n                    type: LOADING_OFF\n                })\n                dispatch({\n                    type: DIALOG_ON,\n                    title: \"죄송해요\",\n                    text: error,\n                    callBack: () => {\n                        window.location.href = '/'\n                    }\n                })\n                dispatch({\n                    type: DATEPICKER_CLOSE\n                })\n            }\n        })\n        .catch(err => {\n            console.error(err)\n            dispatch({\n                type: LOADING_OFF\n            })\n            dispatch({\n                type: DIALOG_ON,\n                title: \"죄송해요\",\n                text: \"서버와 통신시에 예기치 못한 에러가 발생하였어요. 관리자에게 문의해주세요.\",\n                callBack: () => {\n                    window.location.href = '/'\n                }\n            })\n            dispatch({\n                type: DATEPICKER_CLOSE\n            })\n        })\n}\n\nexport interface IInitTodayPray {\n    type: string\n}\n\nexport const initTodayPray = (dispatch: Dispatch<IInitTodayPray>) => {\n    dispatch({\n        type: TODAY_PRAY_FOR_POST_INIT\n    })\n}\n\nexport interface IPostAdsDispatch {\n    type: string\n    ads: string[]\n}\n\nexport const postAds = (ads: string[], dispatch: Dispatch<IPostAdsDispatch>) => {\n    dispatch({\n        type: TODAY_PRAY_FOR_POST_POST_ADS,\n        ads\n    })\n}\n\ninterface IPostTodayPrayDispatch {\n    type: string\n    todayPrays: string[]\n}\n\nexport const postTodayPray = (todayPrays: string[], dispatch: Dispatch<IPostTodayPrayDispatch>) => {\n    dispatch({\n        type: TODAY_PRAY_FOR_POST_POST_TODAY_PRAY,\n        todayPrays\n    })\n}\n\n\n\ninterface IDeleteStudentPrayDispatch {\n    type: string\n    index: number\n}\n\nexport const deleteStudentPray = (index: number, dispatch: Dispatch<IDeleteStudentPrayDispatch>) => {\n    dispatch({\n        type: TODAY_PRAY_FOR_POST_DELETE_STUDENT_PRAY,\n        index\n    })\n}\n\ninterface IPostStudentPrayDispatch {\n    type: string\n    studentPray: ReducerTodayPrayStudentPrayType\n}\n\nexport const postStudentPray = (studentPray: ReducerTodayPrayStudentPrayType, dispatch: Dispatch<IPostStudentPrayDispatch>) => {\n    dispatch({\n        type: TODAY_PRAY_FOR_POST_POST_STUDENT_PRAY,\n        studentPray\n    })\n}","import React, { useState, Dispatch, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Header from './Header'\nimport Body from './Body'\nimport Bottom from './Bottom'\nimport ShadowBoxType from '../../../../../../consts/shadowbox'\nimport { ReducerTodayPrayStudentPrayType } from '../../../../../../types/reducer'\nimport { postStudentPray } from '../../../../../../actions/todayPrayForPost'\nimport { useDispatch } from 'react-redux'\nimport { animateScroll } from 'react-scroll'\n\n\nconst Container = styled.div`\nwidth:100%;\nheight:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Card = styled.div`\n    display: grid;\n    grid-template-rows: 17% 1fr 14%;\n    width:88%;\n    height:80%;\n    padding:7px;\n    box-shadow:${ShadowBoxType.typeOne};\n    background:white;\n    border-radius:4px;\n`\n\ninterface IPostStudentPrayDispatch {\n    type: string\n    studentPray: ReducerTodayPrayStudentPrayType\n}\n\n\nconst Presenter: React.FC = () => {\n\n    const [pray, setPray] = useState(\"\")\n    const postStudentPrayDispatch = useDispatch<Dispatch<IPostStudentPrayDispatch>>()\n\n    const [studentPray, setStudentPray] = useState<ReducerTodayPrayStudentPrayType>({\n        name: \"\",\n        grade: 1,\n        prays: []\n    })\n\n    useEffect(() => {\n        scrollToBottom()\n    }, [studentPray.prays])\n\n    return <Container>\n        <Card>\n            <Header\n                studentPray={studentPray}\n                handleStudentName={handleStudentName}\n                handleStudentGrade={handleStudentGrade}\n            />\n            <Body\n                pray={pray}\n                handlePray={handlePray}\n                studentPray={studentPray}\n                prayOnEnterKeyDown={prayOnEnterKeyDown}\n            />\n            <Bottom submitButtonClicked={submitButtonClicked} />\n        </Card>\n    </Container>\n\n    function scrollToBottom() {\n        animateScroll.scrollToBottom({\n            containerId: \"studentPrayBodyContainer\"\n        })\n    }\n\n    function submitButtonClicked() {\n        postStudentPray(studentPray, postStudentPrayDispatch)\n        setStudentPray({\n            name: \"\",\n            grade: 1,\n            prays: []\n        })\n        setPray(\"\")\n    }\n\n    function handleStudentName(event: React.ChangeEvent<HTMLInputElement>) {\n        setStudentPray({\n            ...studentPray,\n            name: event.target.value\n        })\n    }\n\n    function handleStudentGrade(event: React.ChangeEvent<HTMLInputElement>) {\n        setStudentPray({\n            ...studentPray,\n            grade: parseInt(event.target.value)\n        })\n    }\n\n    function handlePray(event: React.ChangeEvent<HTMLInputElement>) {\n        setPray(event.target.value)\n    }\n\n    function prayOnEnterKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n        if (event.key === 'Enter') {\n            appendStudentPray(pray)\n            setPray(\"\")\n        }\n    }\n\n    function appendStudentPray(newPray: string) {\n        setStudentPray({\n            ...studentPray,\n            prays: [\n                ...studentPray.prays,\n                newPray\n            ]\n        })\n    }\n\n\n}\n\nexport default Presenter","import StudentPray from './presenter'\nexport default StudentPray","import React from 'react'\nimport styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\n\nconst Container = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\ninterface IProps {\n    pray: string\n    handleTodayPray: (event: React.ChangeEvent<HTMLInputElement>) => void\n    onEnterPress: (event: React.KeyboardEvent<HTMLInputElement>) => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    pray,\n    handleTodayPray,\n    onEnterPress\n}) => {\n    return <Container>\n        <TextField\n            style={{\n                width: '100%'\n            }}\n            value={pray}\n            onChange={handleTodayPray}\n            onKeyPress={onEnterPress}\n            id=\"standard-basic\" label=\"오늘의 기도\" />\n    </Container>\n}\n\nexport default Presenter","import Header from './presenter'\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    overflow-y: scroll;\n    display: flex;\n    flex-direction: column;\n`\n\nconst Text = styled.div`\n    padding-left:7px;\n    margin-top:7px;\n`\n\ninterface IProps {\n    prays: string[]\n}\n\n\n\nconst Presenter: React.FC<IProps> = ({\n    prays\n}) => {\n    return <Container id=\"todaypraybody\">\n        {prays.map((pray, i) => {\n            return <Text key={i}>\n                {pray}\n            </Text>\n        })}\n    </Container>\n}\n\nexport default Presenter","import Body from './presenter'\nexport default Body","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\n\nconst Container = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\ninterface IProps {\n    addButtonClikced: () => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    addButtonClikced\n}) => {\n    return <Container>\n        <Button onClick={addButtonClikced} variant=\"contained\" color=\"primary\">\n            추가\n</Button>\n    </Container>\n}\n\nexport default Presenter","import Bottom from './presenter'\nexport default Bottom","import React, { useState, useEffect, Dispatch } from 'react'\nimport styled from 'styled-components'\nimport ShadowBoxType from '../../../../../../consts/shadowbox'\nimport Header from './Header'\nimport Body from './Body'\nimport Bottom from './Bottom'\nimport { animateScroll } from 'react-scroll'\nimport { postTodayPray } from '../../../../../../actions/todayPrayForPost'\nimport { useDispatch } from 'react-redux'\n\nconst Container = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Card = styled.div`\n    width:88%;\n    height:80%;\n    box-shadow:${ShadowBoxType.typeOne};\n    border-radius:4px;\n    display: grid;\n    grid-template-rows: 24% 1fr 20%;\n    padding:7px;\n    border-radius:4px;\n    background:white;\n`\n\ninterface IPostTodayPraysDispatch {\n    type: string\n    todayPrays: string[]\n}\n\nconst Presenter: React.FC = () => {\n\n    const [prays, setPrays] = useState<string[]>([])\n    const [pray, setPray] = useState(\"\")\n\n    const postTodayPrayDispatch = useDispatch<Dispatch<IPostTodayPraysDispatch>>()\n\n    useEffect(() => {\n        scrollToBottom()\n    }, [prays])\n\n    return <Container>\n        <Card>\n            <Header pray={pray} handleTodayPray={handleTodayPray} onEnterPress={onEnterPress} />\n            <Body prays={prays} />\n            <Bottom addButtonClikced={addButtonClikced} />\n        </Card>\n    </Container>\n\n    function addButtonClikced() {\n        postTodayPray(prays, postTodayPrayDispatch)\n        setPray(\"\")\n        setPrays([])\n    }\n\n    function onEnterPress(event: React.KeyboardEvent<HTMLInputElement>) {\n        if (event.key === 'Enter') {\n            appendPrays()\n        }\n    }\n\n    function handleTodayPray(event: React.ChangeEvent<HTMLInputElement>) {\n        setPray(event.target.value)\n    }\n\n    function appendPrays() {\n        setPrays([\n            ...prays,\n            pray\n        ])\n        setPray(\"\")\n    }\n\n    function scrollToBottom() {\n        animateScroll.scrollToBottom({\n            containerId: \"todaypraybody\"\n        })\n    }\n\n}\n\nexport default Presenter","import TodayPray from './presenter'\nexport default TodayPray","import React from 'react'\nimport styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\n\nconst Container = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\ninterface IProps {\n    ad: string\n    handleInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n    handleKeyPress: (event: React.KeyboardEvent<HTMLInputElement>) => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    ad,\n    handleInput,\n    handleKeyPress\n}) => {\n    return <Container>\n        <TextField\n            style={{\n                width: '100%'\n            }}\n            value={ad}\n            onChange={handleInput}\n            onKeyPress={handleKeyPress}\n            id=\"standard-basic\" label=\"광고\" />\n    </Container>\n}\n\nexport default Presenter","import Header from './presenter'\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    overflow-y:scroll;\n`\n\nconst Cell = styled.div`\n    padding-top:7px;\n    padding-left:7px;\n`\n\ninterface IProps {\n    ads: string[]\n}\n\n\nconst Presenter: React.FC<IProps> = ({\n    ads\n}) => {\n    return <Container id=\"adsBodyCellContainer\">\n        {ads.map((ad, i) => {\n            return <Cell key={i}>{ad}</Cell>\n        })}\n    </Container>\n}\n\nexport default Presenter","import Body from './presenter'\nexport default Body","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\ninterface IProps {\n    addButtonClicked: () => void\n}\n\nconst Presenter: React.FC<IProps> = ({ addButtonClicked }) => {\n    return <Container>\n        <Button onClick={addButtonClicked} variant=\"contained\" color=\"primary\">\n            추가\n</Button>\n    </Container>\n}\n\nexport default Presenter","import Bottom from './presenter'\nexport default Bottom","import React, { useState, useEffect, Dispatch } from 'react'\nimport styled from 'styled-components'\nimport ShadowBoxType from '../../../../../../consts/shadowbox'\nimport { postAds, IPostAdsDispatch } from '../../../../../../actions/todayPrayForPost'\nimport Header from './Header'\nimport Body from './Body'\nimport Bottom from './Bottom'\nimport { animateScroll } from 'react-scroll'\nimport { useDispatch } from 'react-redux'\n\nconst Container = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Card = styled.div`\n    display: grid;\n    width:88%;\n    height:80%;\n    padding:7px;\n    box-shadow:${ShadowBoxType.typeOne};\n    grid-template-rows: 24% 1fr 20%;\n    background:white;\n    border-radius:4px;\n`\n\n\nconst Presenter: React.FC = () => {\n\n    const [ads, setAds] = useState<string[]>([])\n    const [ad, setAd] = useState(\"\")\n\n    const postAdsDispatch = useDispatch<Dispatch<IPostAdsDispatch>>()\n\n    useEffect(() => {\n        scrollToBottom()\n    }, [ads])\n\n    return <Container>\n        <Card>\n            <Header ad={ad} handleInput={handleInput} handleKeyPress={handleKeyPress} />\n            <Body ads={ads} />\n            <Bottom addButtonClicked={addButtonClicked} />\n        </Card>\n    </Container>\n\n    function addButtonClicked() {\n        postAds(ads, postAdsDispatch)\n        setAds([])\n        setAd(\"\")\n    }\n\n    function handleKeyPress(event: React.KeyboardEvent<HTMLInputElement>) {\n        if (event.key === 'Enter') {\n            setAds([\n                ...ads,\n                ad\n            ])\n            setAd(\"\")\n        }\n    }\n\n    function scrollToBottom() {\n        animateScroll.scrollToBottom({\n            containerId: \"adsBodyCellContainer\"\n        })\n    }\n\n    function handleInput(event: React.ChangeEvent<HTMLInputElement>) {\n        setAd(event.target.value)\n    }\n}\n\nexport default Presenter","import Ads from './presenter'\nexport default Ads","import React from 'react'\nimport styled from 'styled-components'\nimport StudentPray from './StudentPray'\nimport TodayPray from './TodayPray'\nimport Ads from './Ads'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: 50% 25% 25%;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <StudentPray />\n        <TodayPray />\n        <Ads />\n    </Container>\n}\n\nexport default Presenter","import Left from './presenter'\nexport default Left","import React, { Dispatch } from 'react'\nimport styled from 'styled-components'\nimport { ReducerTodayPrayStudentPrayType } from '../../../../../../../../../types/reducer'\nimport ShadowBoxType from '../../../../../../../../../consts/shadowbox'\nimport { deleteStudentPray } from '../../../../../../../../../actions/todayPrayForPost'\nimport { useDispatch } from 'react-redux'\n\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\ninterface IProps {\n    index: number\n    studentPray: ReducerTodayPrayStudentPrayType\n}\n\nconst Card = styled.div`\n    width: 90%;\n    height: 90%;\n    border-radius:4px;\n    box-shadow:${ShadowBoxType.typeOne};\n    border-radius:4px;\n    padding:7px;\n    margin-top:7px;\n    position:relative;\n`\n\nconst DeleteButton = styled.i`\n    position:absolute;\n    right:10px;\n    top:5px;\n    font-size:20px;\n    padding:4px;\n    cursor: pointer;\n`\n\nconst Name = styled.div`\n    font-size: 18px;\n`\n\nconst PraysContainer = styled.div``\n\nconst Pray = styled.div`\n    padding-left: 20px;\n    margin-top: 7px;\n`\n\ninterface IDeleteStudentPrayDispatch {\n    type: string\n    index: number\n}\n\nconst Presenter: React.FC<IProps> = ({\n    studentPray,\n    index\n}) => {\n\n    const deleteStudentPrayDispatch = useDispatch<Dispatch<IDeleteStudentPrayDispatch>>()\n\n\n    return <Container>\n        <Card>\n            <Name>{studentPray.name} {studentPray.grade}학년</Name>\n            <PraysContainer>\n                {studentPray.prays.map((pray, i) => {\n                    return <Pray key={i}>{pray}</Pray>\n                })}\n            </PraysContainer>\n            <DeleteButton onClick={trashButtonClicked} className=\"fas fa-trash-alt\" />\n        </Card>\n    </Container>\n\n    function trashButtonClicked() {\n        deleteStudentPray(index, deleteStudentPrayDispatch)\n    }\n}\n\nexport default Presenter","import Card from './presenter'\nexport default Card","import React from 'react'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport { ReducerStateType } from '../../../../../../../../types/reducer'\nimport Card from './Card'\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n`\n\nconst Label = styled.div`\n    font-size:18px;\n`\n\nconst Presenter: React.FC = () => {\n\n    const StudentPrayReducer = useSelector((state: ReducerStateType) => state.todayPrayForPost.studentPray)\n\n\n    return <Container>\n        <Label>\n            학생 기도\n        </Label>\n        {StudentPrayReducer.map((oneStudentPray, i) => {\n            return <Card key={i} index={i} studentPray={oneStudentPray} />\n        })}\n    </Container>\n}\n\nexport default Presenter","import StudentPray from './presenter'\nexport default StudentPray","import React from 'react'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport { ReducerStateType } from '../../../../../../../../types/reducer'\nimport COLORS from '../../../../../../../../consts/colors'\n\nconst Container = styled.div`\n    margin-top:20px;\n    display:flex;\n    flex-direction:column;\n`\n\nconst Label = styled.div`\n    font-size:18px;\n    padding-top:4px;\n    width:100%;\n    border-top:1px solid ${COLORS.weakGray};\n`\nconst Text = styled.div`\n    padding-left: 10px;\n    padding-top: 7px;\n`\n\nconst Presenter: React.FC = () => {\n\n    const todayPrayReducer = useSelector((state: ReducerStateType) => state.todayPrayForPost.todayPrayContent)\n\n    return <Container>\n        <Label>\n            오늘의 기도\n        </Label>\n        {todayPrayReducer.map((todayPrayContent, i) => {\n            return <Text key={i}>\n                {todayPrayContent}\n            </Text>\n        })}\n    </Container>\n}\n\nexport default Presenter","import TodayPray from './presenter'\nexport default TodayPray","import React from 'react'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport { ReducerStateType } from '../../../../../../../../types/reducer'\nimport COLORS from '../../../../../../../../consts/colors'\n\nconst Container = styled.div`\n    margin-top:20px;\n`\n\nconst Label = styled.div`\n    font-size:18px;\n    padding-top:4px;\n    width:100%;\n    border-top:1px solid ${COLORS.weakGray};\n`\n\nconst Text = styled.div`\n    padding-left:10px;\n    padding-top:7px;\n`\n\nconst Presenter: React.FC = () => {\n\n    const AdsReducer = useSelector((state: ReducerStateType) => state.todayPrayForPost.ads)\n\n\n    return <Container>\n        <Label>광고</Label>\n        {AdsReducer.map((ad, i) => {\n            return <Text key={i}>\n                {ad}\n            </Text>\n        })}\n    </Container>\n}\n\nexport default Presenter","import Ads from './presenter'\nexport default Ads","import React from 'react'\nimport styled from 'styled-components'\nimport StudentPray from './StudentPray'\nimport TodayPray from './TodayPray'\nimport Ads from './Ads'\n\nconst Container = styled.div`\n    overflow-y: scroll;\n    padding: 20px 10px;\n    display: flex;\n    flex-direction: column;\n`\n\nconst Presenter: React.FC = () => {\n\n\n    return <Container>\n        <StudentPray />\n        <TodayPray />\n        <Ads />\n    </Container>\n}\n\nexport default Presenter","import Body from './presenter'\nexport default Body","import { Dispatch } from \"react\";\nimport { DATEPICKER_OPEN, DATEPICKER_CLOSE } from \"./types\";\n\nexport interface IDatePickerDispatch {\n    type: string\n}\n\nexport const closeDatePicker = (dispatch: Dispatch<IDatePickerDispatch>) => {\n    dispatch({\n        type: DATEPICKER_CLOSE\n    })\n}\n\nexport const openDatePicker = (dispatch: Dispatch<IDatePickerDispatch>) => {\n    dispatch({\n        type: DATEPICKER_OPEN\n    })\n}","import React, { Dispatch } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\nimport { IDatePickerDispatch, openDatePicker } from '../../../../../../../actions/datepicker'\nimport { useDispatch } from 'react-redux'\n\nconst Container = styled.div`\n    display:flex;\n    justify-content:center;\n`\n\nconst Presenter: React.FC = () => {\n\n    const datePickerDispatch = useDispatch<Dispatch<IDatePickerDispatch>>()\n\n    return <Container>\n        <Button style={{\n            height: 38\n        }} variant=\"outlined\" color=\"primary\"\n            onClick={buttonClicked}\n        >\n            제출하기\n        </Button>\n    </Container>\n\n    function buttonClicked() {\n        openDatePicker(datePickerDispatch)\n    }\n}\n\nexport default Presenter","import Bottom from './presenter'\nexport default Bottom","import React from 'react'\nimport styled from 'styled-components'\nimport ShadowBoxType from '../../../../../../consts/shadowbox'\nimport Body from './Body'\nimport Bottom from './Bottom'\n\nconst Container = styled.div`\n    border-radius:4px;\n    box-shadow:${ShadowBoxType.typeOne};\n    width: 500px;\n    height: 90%;\n    display: grid;\n    grid-template-rows: 1fr 8%;\n    background:white;\n    border-radius:4px;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <Body />\n        <Bottom />\n    </Container>\n}\n\nexport default Presenter","import Card from './presenter'\nexport default Card","import React from 'react'\nimport styled from 'styled-components'\nimport Card from './Card'\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <Card />\n    </Container>\n}\n\nexport default Presenter","import Right from './presenter'\nexport default Right","import React from 'react'\nimport styled from 'styled-components'\nimport Left from './Left'\nimport Right from './Right'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    height: 100%;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <Left />\n        <Right />\n    </Container>\n}\n\nexport default Presenter","import PostWorkspace from './presenter'\nexport default PostWorkspace","import { ReducerTodayPrayForViewPraysType } from \"../types/reducer\";\nimport axios from 'axios'\nimport { DONGGYU_ENDPOINT } from \"../consts/endPoint\";\nimport { Dispatch } from \"react\";\nimport { LOADING_ON, LOADING_OFF, DIALOG_ON, TODAY_PRAY_FOR_VIEW_GET_PRAYS, TODAY_PRAY_FOR_VIEW_INIT } from \"./types\";\n\n\nexport interface IInitPrays {\n    type: string\n}\n\nexport const initPrays = (dispatch: Dispatch<IInitPrays>) => {\n    dispatch({\n        type: TODAY_PRAY_FOR_VIEW_INIT\n    })\n}\n\n\nexport interface IGetPraysDispatch {\n    type: string\n    prays?: ReducerTodayPrayForViewPraysType[]\n    title?: string\n    text?: string\n    callBack?: (param: any) => void\n    praysCount?: number\n}\n\ninterface IGetPraysData {\n    ok: boolean\n    error: string\n    prays: ReducerTodayPrayForViewPraysType[]\n    praysCount: number\n}\n\nexport const getPrays = (page: number, dispatch: Dispatch<IGetPraysDispatch>) => {\n    dispatch({\n        type: LOADING_ON\n    })\n    axios.get(`${DONGGYU_ENDPOINT}todaypray/prays/${page}`)\n        .then(res => res.data)\n        .then(data => {\n            const { ok, error, prays, praysCount } = data as IGetPraysData\n            if (ok) {\n                dispatch({\n                    type: LOADING_OFF\n                })\n                dispatch({\n                    type: TODAY_PRAY_FOR_VIEW_GET_PRAYS,\n                    prays,\n                    praysCount\n                })\n            } else {\n                dispatch({\n                    type: LOADING_OFF\n                })\n                dispatch({\n                    type: DIALOG_ON,\n                    title: \"죄송헤요\",\n                    text: error,\n                    callBack: () => {\n                        window.location.href = '/'\n                    }\n                })\n            }\n        })\n        .catch(err => {\n            console.error(err)\n            dispatch({\n                type: LOADING_OFF\n            })\n            dispatch({\n                type: DIALOG_ON,\n                title: \"죄송헤요\",\n                text: \"서버와 통신도중 에러가 발생하였습니다.\",\n                callBack: () => {\n                    window.location.href = '/'\n                }\n            })\n        })\n}","import { Dispatch } from \"react\";\nimport { TODAY_PRAY_DETAIL_OPEN, TODAY_PRAY_DETAIL_CLOSE } from \"./types\";\n\nexport interface IOpenDispatch {\n    type: string\n    id: string\n}\n\nexport const open = (id: string, dispatch: Dispatch<IOpenDispatch>) => {\n    dispatch({\n        type: TODAY_PRAY_DETAIL_OPEN,\n        id\n    })\n}\n\nexport interface ICloseDispatch {\n    type: string\n}\n\nexport const close = (dispatch: Dispatch<ICloseDispatch>) => {\n    dispatch({\n        type: TODAY_PRAY_DETAIL_CLOSE\n    })\n}","import React, { Dispatch } from 'react'\nimport styled from 'styled-components'\nimport { ReducerTodayPrayForViewPraysType } from '../../../../../../types/reducer'\nimport ShadowBoxType from '../../../../../../consts/shadowbox'\nimport moment from 'moment'\nimport { open, IOpenDispatch } from '../../../../../../actions/todayPrayDetail'\nimport { useDispatch } from 'react-redux'\n\nconst Container = styled.div`\n    box-shadow:${ShadowBoxType.typeOne};\n    display: grid;\n    grid-template-rows: 20% 20% 1fr;\n    cursor: pointer;\n`\nconst TextContainer = styled.div`\n    padding:7px;\n    overflow:hidden;\n    display:flex;\n    align-items:center;\n`\n\nconst Date = styled.div`\n    font-weight: 800;\n`\n\nconst WriterName = styled.div`\n    font-weight:700;\n`\n\nconst PrayContents = styled.div`\n    height: 86%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 4; /* 라인수 */\n    -webkit-box-orient: vertical;\n    word-wrap:break-word; \n    line-height: 1.3em;\n    height: 5.2em;\n    font-weight:100;\n`\n\n\ninterface IProps {\n    pray: ReducerTodayPrayForViewPraysType\n}\n\nconst Presenter: React.FC<IProps> = ({\n    pray\n}) => {\n\n    const openTodayPrayDetailDispatch = useDispatch<Dispatch<IOpenDispatch>>()\n\n    return <Container onClick={clickCard}>\n        <TextContainer>\n            <Date>\n                {\n                    moment(pray.date).format('ddd, MMM do YYYY, hA')\n                }\n            </Date>\n        </TextContainer>\n        <TextContainer>\n            <WriterName>\n                {pray.writer.name}\n            </WriterName>\n        </TextContainer>\n        <TextContainer style={{\n            alignItems: 'flex-start'\n        }}>\n\n            {pray.todayPrayContent.map((content, i) => {\n                return <PrayContents key={i}>\n                    {content}\n                </PrayContents>\n            })}\n\n        </TextContainer>\n    </Container>\n\n\n    function clickCard() {\n        open(pray._id, openTodayPrayDetailDispatch)\n    }\n\n}\n\nexport default Presenter","import Card from './presenter'\nexport default Card","import React, { useState, useEffect, Dispatch } from 'react'\nimport styled from 'styled-components'\nimport Card from './Card'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ReducerStateType } from '../../../../../types/reducer'\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport { getPrays, IGetPraysDispatch } from '../../../../../actions/todayPrayForView'\n\n\ninterface IContainer {\n    gridTemplateColumns: string\n}\n\nconst Container = styled.div`\n    padding-top: 10px;\n    padding-bottom: 10px;\n    display: grid;\n    grid-template-columns:${(props: IContainer) => props.gridTemplateColumns};\n    grid-auto-rows: 200px;\n    grid-column-gap: 20px;\n    grid-row-gap: 15px;\n    overflow-y:scroll;\n`\n\ninterface IProps {\n    width: number\n    height: number\n    page: number\n}\n\n\nconst Presenter: React.FC<IProps> = ({\n    width,\n    height,\n    page\n}) => {\n\n    const [gridTemplateColumn, setGridTemplateColumn] = useState(\"\")\n    const praysForViewReducer = useSelector((state: ReducerStateType) => state.todayPrayForView)\n    const prays = praysForViewReducer.prays\n\n    const getPraysDispatch = useDispatch<Dispatch<IGetPraysDispatch>>()\n    const totalPraysNumber = praysForViewReducer.praysCount\n    const currentPraysNumber = prays.length\n\n\n\n    useEffect(() => {\n        if (width > 1300) {\n            setGridTemplateColumn(\"repeat(4,1fr)\")\n        } else if (width > 780) {\n            setGridTemplateColumn(\"repeat(3,1fr)\")\n        } else if (width > 520) {\n            setGridTemplateColumn(\"repeat(2,1fr)\")\n        } else {\n            setGridTemplateColumn(\"repeat(1,1fr)\")\n        }\n    }, [width])\n\n\n\n    return <BottomScrollListener onBottom={containerToBottom}>\n        {(scrollRef: any) => (\n\n            <Container ref={scrollRef} id=\"todaypraycardcontainer\" gridTemplateColumns={gridTemplateColumn}>\n                {prays.map((pray, i) => {\n                    return <Card pray={pray} key={i} />\n                })}\n            </Container>\n        )}\n    </BottomScrollListener>\n\n    function containerToBottom() {\n        console.log('container reached to bottom!')\n        if (totalPraysNumber > currentPraysNumber) {\n            getPrays(page, getPraysDispatch)\n        }\n    }\n\n\n}\n\nexport default Presenter","import CardsContainer from './presenter'\nexport default CardsContainer","import React, { Dispatch, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { getPrays, IGetPraysDispatch, initPrays, IInitPrays } from '../../../../actions/todayPrayForView'\nimport { useDispatch } from 'react-redux'\nimport CardsContainer from './Container'\nimport ReactResizeDetector from 'react-resize-detector';\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    display: grid;\n    justify-content: center;\n    grid-template-columns: 92%;\n`\n\nconst Presenter: React.FC = () => {\n\n    const [page, setPage] = useState(1)\n\n    const getPraysDispatch = useDispatch<Dispatch<IGetPraysDispatch>>()\n\n    const initDispatch = useDispatch<Dispatch<IInitPrays>>()\n\n    useEffect(() => {\n        initPraysFunc()\n        callPrays()\n    }, [])\n\n    interface IreactResizeDetectorObject {\n        width: number\n        height: number\n    }\n\n    return <Container>\n        <ReactResizeDetector handleWidth handleHeight>\n            {({ width, height }: IreactResizeDetectorObject) => <CardsContainer page={page} width={width} height={height} />}\n        </ReactResizeDetector>\n\n    </Container>\n\n    function initPraysFunc() {\n        initPrays(initDispatch)\n    }\n\n    function callPrays() {\n        getPrays(page, getPraysDispatch)\n        setPage(page + 1)\n    }\n}\n\nexport default Presenter","import ViewWorkspace from './presenter'\nexport default ViewWorkspace","import React from 'react'\nimport styled from 'styled-components'\nimport NavigationToggleButton from './NavigationToggleButton'\nimport { useSelector } from 'react-redux'\nimport { ReducerStateType } from '../../../types/reducer'\nimport PostWorkspace from './PostWorkspace'\nimport ViewWorkspace from './ViewWorkspace'\nimport COLORS from '../../../consts/colors'\n\nconst Container = styled.div`\n    width:100%;\n    position:relative;\n    background:${COLORS.almostWhite};\n`\n\nconst Presenter: React.FC = () => {\n\n    const workspaceReducer = useSelector((state: ReducerStateType) => state.workspace)\n    const workspaceCurrent = workspaceReducer.current\n\n    return <Container>\n        {workspaceCurrent === \"POST\" && <PostWorkspace />}\n        {workspaceCurrent === \"VIEW\" && <ViewWorkspace />}\n        <NavigationToggleButton />\n    </Container>\n}\n\nexport default Presenter","import Main from './presenter'\nexport default Main","import React from 'react'\nimport styled from 'styled-components'\nimport LeftSideBar from '../LeftSideBar'\nimport Main from './MainContents'\n\nconst Container = styled.div`\n    display:flex;\n    height:100vh;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <LeftSideBar />\n        <Main />\n    </Container>\n}\n\nexport default Presenter","import MainPage from './presenter'\nexport default MainPage\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport MainPage from '../components/MainPage'\n\nconst PrivateRouteComponent: React.FC = () => {\n    return <Switch>\n        <Route>\n            <MainPage />\n        </Route>\n    </Switch>\n}\n\nexport default PrivateRouteComponent","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: 1fr 1fr 1fr;\n`\n\nconst BigText = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-size:20px;\n`\n\nconst SmallText = styled.div`\n    display:flex;\n    align-items:flex-start;\n    justify-content:center;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <div />\n        <BigText>\n            로그인\n        </BigText>\n        <SmallText>\n            성서봇2 관리자 서비스\n        </SmallText>\n    </Container>\n}\n\nexport default Presenter","import Header from './presenter'\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\nimport { TextField } from '@material-ui/core'\n\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-rows: repeat(3,1fr);\n`\n\nconst Row = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\ninterface IProps {\n    email: string\n    password: string\n    handleInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    email,\n    password,\n    handleInput\n}) => {\n\n\n    return <Container>\n        <Row>\n            <TextField\n                onChange={handleInput}\n                value={email}\n                name=\"email\" style={{ width: \"80%\" }} id=\"outlined-basic\" label=\"아이디 혹은 이메일입력\" variant=\"outlined\" />\n        </Row>\n        <Row>\n            <TextField\n                value={password}\n                onChange={handleInput}\n                name=\"password\" style={{ width: \"80%\" }} type=\"password\" id=\"outlined-basic\" label=\"비밀번호 입력\" variant=\"outlined\" />\n        </Row>\n        <Row />\n    </Container>\n\n\n}\n\nexport default Presenter","import Body from './presenter'\nexport default Body\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3,1fr);\n    align-items: flex-start;\n`\n\nconst ButtonContainer = styled.div`\n    display:flex;\n    align-items:flex-start;\n    justify-content:center;\n`\n\ninterface IProps {\n    loginButtonClicked: () => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    loginButtonClicked\n}) => {\n    return <Container>\n        <div />\n        <div />\n        <ButtonContainer>\n            <Button onClick={loginButtonClicked} variant=\"contained\" color=\"primary\">\n                로그인\n            </Button>\n        </ButtonContainer>\n    </Container>\n}\n\nexport default Presenter","import Bottom from './presenter'\nexport default Bottom","import React, { useState, Dispatch } from 'react'\nimport styled from 'styled-components'\nimport ShadowBoxType from '../../../../consts/shadowbox'\nimport Header from './Header'\nimport Body from './Body'\nimport Bottom from './Bottom'\nimport { useDispatch } from 'react-redux'\nimport { userLogin } from '../../../../actions/user'\n\nconst Container = styled.div`\n    box-shadow: ${ShadowBoxType.typeOne};\n    width:430px;\n    height:90%;\n    display: grid;\n    grid-template-rows: 30% 1fr 20%;\n`\n\ninterface IUserLoginDispatch {\n    type: string\n}\n\nconst Presenter: React.FC = () => {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const userLoginDispatch = useDispatch<Dispatch<IUserLoginDispatch>>()\n\n    return <Container>\n        <Header />\n        <Body\n            handleInput={handleInput}\n            email={email}\n            password={password}\n        />\n        <Bottom\n            loginButtonClicked={loginButtonClicked}\n        />\n    </Container>\n\n    function loginButtonClicked() {\n        userLogin(email, password, userLoginDispatch)\n    }\n\n    function handleInput(event: React.ChangeEvent<HTMLInputElement>) {\n        const { name, value } = event.target\n        switch (name) {\n            case \"email\":\n                setEmail(value)\n                break;\n            case \"password\":\n                setPassword(value)\n            default:\n                break;\n        }\n    }\n\n}\n\nexport default Presenter","import Card from './presenter'\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport Card from './Card'\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <Card />\n    </Container>\n}\n\nexport default Presenter","import Body from './presenter'\nexport default Body","import React from 'react'\nimport styled from 'styled-components'\nimport Body from './Body'\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 20% 1fr 14%;\n`\n\nconst Header = styled.div``\n\nconst Bottom = styled.div``\n\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <Header />\n        <Body />\n        <Bottom />\n    </Container>\n}\n\nexport default Presenter","import LoginPage from './presenter'\nexport default LoginPage","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport LoginPage from '../components/LoginPage'\n\nconst PublicRouteComponent: React.FC = () => {\n    return <Switch>\n        <Route exact path='/login'>\n            <LoginPage />\n        </Route>\n        <Route>\n            <LoginPage />\n        </Route>\n    </Switch>\n}\n\nexport default PublicRouteComponent","import { Dispatch } from \"react\";\nimport { DIALOG_ON, DIALOG_OFF } from \"./types\";\n\ninterface IDialogOffDispatch {\n    type: string\n}\n\nexport const dialogOff = (dispatch: Dispatch<IDialogOffDispatch>) => {\n    dispatch({\n        type: DIALOG_OFF\n    })\n}\n\nexport interface IDialogInDispatch {\n    type: string\n    title: string\n    text: string\n    callBack: (param: any) => void\n}\n\nexport const dialogOn = (title: string, text: string, dispatch: Dispatch<IDialogInDispatch>, callBack?: (param: any) => void) => {\n    dispatch({\n        type: DIALOG_ON,\n        title,\n        text,\n        callBack: callBack ? callBack : () => { }\n    })\n}","import Dialog from './presenter'\nexport default Dialog","import React, { Dispatch } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReducerStateType } from '../../types/reducer';\nimport { dialogOff } from '../../actions/dialog'\n\n\n\ninterface IDialogOffDispatch {\n    type: string\n}\n\nexport default function AlertDialog() {\n\n    const dialogReducer = useSelector((state: ReducerStateType) => state.dialog)\n    const dialogOffDispatch = useDispatch<Dispatch<IDialogOffDispatch>>()\n\n\n    const handleClose = () => {\n        dialogOff(dialogOffDispatch)\n    };\n\n    const agreeButtonClicked = () => {\n        dialogReducer.callBack()\n        dialogOff(dialogOffDispatch)\n    }\n\n    const disagreeButtonClicked = () => {\n        dialogOff(dialogOffDispatch)\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={dialogReducer.open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{dialogReducer.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {dialogReducer.text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={disagreeButtonClicked} color=\"primary\">\n                        Disagree\n          </Button>\n                    <Button onClick={agreeButtonClicked} color=\"primary\" autoFocus>\n                        Agree\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { PacmanLoader } from 'react-spinners'\n\nconst Container = styled.div`\n    position:absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(0,0,0,0.5);\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\nexport default function () {\n\n    return <Container>\n        <PacmanLoader color={'white'} />\n    </Container>\n}","import Loading from './presenter'\nexport default Loading","import React, { Dispatch } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\nimport { closeDatePicker, IDatePickerDispatch } from '../../../actions/datepicker'\nimport { PostTodayPrayToServer, IPostTodayPrayToServerDispatch } from '../../../actions/todayPrayForPost'\nimport { dialogOn, IDialogInDispatch } from '../../../actions/dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ReducerStateType } from '../../../types/reducer'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    justify-content: center;\n    align-items: center;\n`\n\nconst ButtonContainer = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\ninterface IProps {\n    selectedDate: Date | null\n}\n\nconst Presenter: React.FC<IProps> = ({\n    selectedDate\n}) => {\n\n    const closeDatePickerDispatch = useDispatch<Dispatch<IDatePickerDispatch>>()\n    const postTodayPrayToServerDispatch = useDispatch<Dispatch<IPostTodayPrayToServerDispatch>>()\n    const todayPray = useSelector((state: ReducerStateType) => state.todayPrayForPost)\n    const dialogDispatch = useDispatch<Dispatch<IDialogInDispatch>>()\n\n    return <Container>\n        <ButtonContainer>\n            <Button onClick={cancleButtonClicked} variant=\"contained\" color=\"secondary\">\n                취소\n            </Button>\n        </ButtonContainer>\n        <ButtonContainer>\n            <Button onClick={submitButtonClicked} variant=\"contained\" color=\"primary\">\n                제출\n            </Button>\n        </ButtonContainer>\n    </Container>\n\n    function submitButtonClicked() {\n        if (selectedDate) {\n            PostTodayPrayToServer(todayPray, selectedDate.getTime().toString(), postTodayPrayToServerDispatch)\n\n        } else {\n            dialogOn(\"경고\", \"정확한 날짜가 선택되어지지 않았습니다. 날짜를 다시 정확하게 선택한 후 제출해주세요.\", dialogDispatch)\n        }\n    }\n\n    function cancleButtonClicked() {\n        closeDatePicker(closeDatePickerDispatch)\n    }\n}\n\nexport default Presenter","import Bottom from './presenter'\nexport default Bottom","import 'date-fns';\nimport React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport styled from 'styled-components';\nimport enUS from \"date-fns/locale/en-US\";\nimport ShadowBoxType from '../../consts/shadowbox';\nimport Bottom from './Bottom';\n\nconst Container = styled.div`\n    position:absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    background:rgba(0,0,0,0.5);\n`\n\nconst Card = styled.div`\n    padding:20px 30px;\n    background:white;\n    border-radius:4px;\n    box-shadow:${ShadowBoxType.typeOne};\n    display: grid;\n    grid-template-rows: 95px 63px;\n`\n\nexport default function MaterialUIPickers() {\n    // The first commit of Material-UI\n    const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n        new Date(),\n    );\n\n    const handleDateChange = (date: Date | null) => {\n        setSelectedDate(date);\n    };\n\n    return (\n        <MuiPickersUtilsProvider locale={enUS} utils={DateFnsUtils}>\n            <Container>\n                <Card>\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"date-picker-dialog\"\n                        label=\"Date picker dialog\"\n                        format=\"MM/dd/yyyy\"\n                        value={selectedDate}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                    <Bottom selectedDate={selectedDate} />\n                </Card>\n\n            </Container>\n        </MuiPickersUtilsProvider>\n    );\n}","import DatePicker from './presenter'\nexport default DatePicker","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n`\n\nconst Text = styled.div`\n    font-weight:600;\n`\n\ninterface IProps {\n    date: string\n}\n\n\n\nconst Presenter: React.FC<IProps> = ({\n    date\n}) => {\n    const dateObj = new Date(date)\n    const year = dateObj.getFullYear()\n    const month = dateObj.getMonth() + 1\n    const day = dateObj.getDate()\n    return <Container>\n        <Text>\n            {year}년 {month}월 {day}일에 작성된 기도문입니다.\n        </Text>\n    </Container>\n}\n\nexport default Presenter","import Header from './presenter'\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n`\n\nconst Text = styled.div`\n    font-weight:600;\n`\n\ninterface IProps {\n    writerName: string\n}\n\nconst Presenter: React.FC<IProps> = ({\n    writerName\n}) => {\n    return <Container>\n        <Text>\n            작성자 {writerName}\n        </Text>\n    </Container>\n}\n\nexport default Presenter","import Title from './presenter'\nexport default Title","import React from 'react'\nimport styled from 'styled-components'\nimport { ReducerTodayPrayStudentPrayType } from '../../../../../../types/reducer'\nimport ShadowBoxType from '../../../../../../consts/shadowbox'\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    border-radius:4px;\n    box-shadow:${ShadowBoxType.typeOne};\n    margin-bottom: 20px;\n    padding:8px;\n    margin-top:3px;\n`\n\nconst Writer = styled.div`\n    font-weight: 500;\n    margin-bottom: 10px;\n`\n\nconst Pray = styled.div`\n    margin-bottom:7px;\n    display:flex;\n    align-items:flex-start;\n`\n\nconst PraysContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    padding-left:10px;\n    margin-top:5px;\n`\n\n\nconst DotContainer = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    margin-right:7px;\n    margin-top:6px;\n`\n\nconst Dot = styled.div`\n    width:4px;\n    height:4px;\n    border-radius:50%;\n    background:black;\n`\n\ninterface IProps {\n    pray: ReducerTodayPrayStudentPrayType\n}\n\nconst Presenter: React.FC<IProps> = ({\n    pray\n}) => {\n    return <Container>\n        <Writer>\n            작성자: {pray.name}({pray.grade})\n        </Writer>\n        <PraysContainer>\n            {pray.prays.map((pray, i) => {\n                return <Pray key={i}>\n                    <DotContainer>\n                        <Dot />\n                    </DotContainer>\n                    {pray}\n                </Pray>\n\n            })}\n        </PraysContainer>\n    </Container>\n}\n\nexport default Presenter","import Card from './presenter'\nexport default Card","import React from 'react'\nimport styled from 'styled-components'\nimport { ReducerTodayPrayStudentPrayType } from '../../../../../types/reducer'\nimport Card from './Card'\nimport COLORS from '../../../../../consts/colors'\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    margin-bottom:10px;\n`\n\nconst Text = styled.div`\n    font-weight:600;\n    padding-bottom:5px;\n    border-bottom:1px solid ${COLORS.weakGray};\n`\n\ninterface IProps {\n    studentPrays: ReducerTodayPrayStudentPrayType[]\n}\n\nconst Presenter: React.FC<IProps> = ({\n    studentPrays\n}) => {\n    return <Container>\n        <Text>\n            학생분들의 기도\n        </Text>\n        {studentPrays.map((pray, i) => {\n            return <Card pray={pray} key={i} />\n        })}\n    </Container>\n}\n\nexport default Presenter","import StudentPrays from './presenter'\nexport default StudentPrays","import React from 'react'\nimport styled from 'styled-components'\nimport COLORS from '../../../../../consts/colors'\n\nconst Container = styled.div`\n    margin-bottom:20px;\n`\n\nconst Label = styled.div`\n    font-weight:600;\n    margin-bottom:10px;\n    padding-bottom:5px;\n    border-bottom:1px solid ${COLORS.weakGray};\n`\n\nconst PraysContainer = styled.div`\n    padding-left:10px;\n`\n\nconst Pray = styled.div`\n    margin-bottom:7px;\n    display:flex;\n    align-items:flex-start;\n`\n\nconst DotContainer = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    margin-right:7px;\n    margin-top:6px;\n`\n\nconst Dot = styled.div`\n    width:4px;\n    height:4px;\n    border-radius:50%;\n    background:black;\n`\n\ninterface IProps {\n    prays: string[]\n}\n\nconst Presenter: React.FC<IProps> = ({\n    prays\n}) => {\n    return <Container>\n        <Label>\n            오늘의 말씀\n        </Label>\n        <PraysContainer>\n            {prays.map((pray, i) => {\n                return <Pray key={i}>\n                    <DotContainer>\n                        <Dot />\n                    </DotContainer> {pray}\n                </Pray>\n\n            })}\n        </PraysContainer>\n    </Container>\n}\n\nexport default Presenter","import TodayPrayContents from './presenter'\nexport default TodayPrayContents","import React from 'react'\nimport styled from 'styled-components'\nimport COLORS from '../../../../../consts/colors'\n\nconst Container = styled.div``\n\nconst Label = styled.div`\n    font-weight:600;\n    padding-bottom:5px;\n    border-bottom:1px solid ${COLORS.weakGray};\n    margin-bottom:10px;\n`\n\nconst AdsContainer = styled.div`\n    padding-left:10px;\n`\n\nconst Ad = styled.div`\n    margin-bottom:7px;\n    display:flex;\n    align-items:flex-start;\n`\n\n\nconst DotContainer = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    margin-right:7px;\n    margin-top:6px;\n`\n\nconst Dot = styled.div`\n    width:4px;\n    height:4px;\n    border-radius:50%;\n    background:black;\n`\n\ninterface IProps {\n    ads: string[]\n}\n\nconst Presenter: React.FC<IProps> = ({\n    ads\n}) => {\n    return <Container>\n        <Label>\n            광고\n        </Label>\n        <AdsContainer>\n            {ads.map((ad, i) => {\n                return <Ad key={i}>\n                    <DotContainer><Dot /></DotContainer>{ad}\n                </Ad>\n            })}\n        </AdsContainer>\n    </Container>\n}\n\nexport default Presenter","import Ads from './presenter'\nexport default Ads","import React from 'react'\nimport styled from 'styled-components'\nimport { ReducerTodayPrayForViewPraysType } from '../../../../types/reducer'\nimport StudentPrays from './StudentPrays'\nimport TodayPrayContents from './TodayPrayContents'\nimport Ads from './Ads'\n\nconst Container = styled.div`\n    overflow-y:scroll;\n`\n\ninterface IProps {\n    pray: ReducerTodayPrayForViewPraysType\n}\n\nconst Presenter: React.FC<IProps> = ({\n    pray\n}) => {\n    return <Container>\n        <StudentPrays studentPrays={pray.studentPray} />\n        <TodayPrayContents prays={pray.todayPrayContent} />\n        <Ads ads={pray.ads} />\n    </Container>\n}\n\nexport default Presenter","import Body from './presenter'\nexport default Body","import React from 'react'\nimport styled from 'styled-components'\nimport { ReducerTodayPrayForViewPraysType } from '../../../types/reducer'\nimport Header from './Header'\nimport Title from './Title'\nimport Body from './Body'\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    display: grid;\n    justify-content: center;\n    grid-auto-columns: 91%;\n    grid-template-rows: 7% 7% 1fr;\n`\n\ninterface IProps {\n    pray: ReducerTodayPrayForViewPraysType\n}\n\nconst Presenter: React.FC<IProps> = ({\n    pray\n}) => {\n    return <Container>\n        <Header date={pray.date} />\n        <Title writerName={pray.writer.name} />\n        <Body pray={pray} />\n    </Container>\n}\n\nexport default Presenter","import Content from './presenter'\nexport default Content","import React, { useRef, useEffect, useState, Dispatch } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport ShadowBoxType from '../../consts/shadowbox'\nimport { close, ICloseDispatch } from '../../actions/todayPrayDetail'\nimport { dialogOn, IDialogInDispatch } from '../../actions/dialog'\nimport { ReducerTodayPrayForViewPraysType, ReducerStateType } from '../../types/reducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { DONGGYU_ENDPOINT } from '../../consts/endPoint'\nimport Content from './Content'\n\nconst Container = styled.div`\n    display:flex;\n    position:absolute;\n    top:0;\n    left:0;\n    justify-content: flex-end;\n    background:rgba(0,0,0,0.5);\n    width:100%;\n    height:100%;\n`\n\nconst FromBottomToTop = keyframes`\n    from {\n        left:550px;\n    }to {\n        left:0;\n    }\n`\n\nconst FromTopToBottom = keyframes`\n    from {\n        left:0;\n    }to {\n        left:550px;\n    }\n`\n\nconst Card = styled.div`\n    width:550px;\n    height:100%;\n    background:white;\n    border-radius:4px;\n    box-shadow:${ShadowBoxType.typeOne};\n    position: relative;\n    animation:${FromBottomToTop} 0.4s;\n`\n\nconst DisappearingCard = styled.div`\n    width:550px;\n    height:100%;\n    background:white;\n    border-radius:4px;\n    box-shadow:${ShadowBoxType.typeOne};\n    position: relative;\n    left:550px;\n    animation:${FromTopToBottom} 0.4s;\n`\n\nconst Presenter: React.FC = () => {\n\n    const [disappearing, setDisappearing] = useState(false)\n    const [prayObj, setPrayObj] = useState<ReducerTodayPrayForViewPraysType>({\n        _id: \"\",\n        ads: [],\n        studentPray: [],\n        todayPrayContent: [],\n        writer: {\n            name: \"\",\n            _id: \"\"\n        },\n        date: \"\"\n    })\n\n    const wrappedRef = useRef(null)\n    const closeDispatch = useDispatch<Dispatch<ICloseDispatch>>()\n    const dialogDispatch = useDispatch<Dispatch<IDialogInDispatch>>()\n\n    const todayPrayDetailReducer = useSelector((state: ReducerStateType) => state.todayPrayDetail)\n\n\n    useEffect(() => {\n        callTodayPray()\n    }, [])\n\n\n    useOutsideAlerter(wrappedRef)\n\n    if (disappearing) {\n        return <Container>\n            <DisappearingCard>\n                <Content pray={prayObj} />\n            </DisappearingCard>\n        </Container>\n    } else {\n        return <Container>\n            <Card ref={wrappedRef}>\n                <Content pray={prayObj} />\n            </Card>\n        </Container>\n    }\n\n    function callTodayPray() {\n\n        axios.get(`${DONGGYU_ENDPOINT}todaypray/pray/${todayPrayDetailReducer.id}`)\n            .then(res => res.data)\n            .then(data => {\n                interface IData {\n                    ok: boolean,\n                    error: string,\n                    pray: ReducerTodayPrayForViewPraysType\n                }\n\n\n                const { ok, error, pray } = data as IData\n                if (ok) {\n                    console.log('pray: ', pray)\n                    setPrayObj(pray)\n                } else {\n                    dialogOn(\"죄송해요\", error, dialogDispatch, () => {\n                        window.location.href = '/'\n                    })\n                }\n            })\n            .catch(err => {\n\n                dialogOn(\"죄송해요\", \"서버와의 통신도중 예기치 못한 에러가 발생하였어요. \", dialogDispatch, () => {\n                    window.location.href = '/'\n                })\n            })\n\n    }\n\n\n\n    function useOutsideAlerter(ref: React.RefObject<HTMLDivElement>) {\n        // Alert if clicked on outside of element\n        function handleClickOutside(event: any) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                // 카드 닫기\n                setDisappearing(true)\n                setTimeout(() => {\n                    close(closeDispatch)\n                }, 400);\n            }\n        }\n\n        useEffect(() => {\n            // Bind the event listener\n            document.addEventListener(\"mousedown\", handleClickOutside);\n            return () => {\n                document.removeEventListener(\"mousedown\", handleClickOutside)\n            }\n        })\n    }\n\n}\n\n\n\n\nexport default Presenter","import CardDetailComponent from './presenter'\nexport default CardDetailComponent","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ReducerStateType } from './types/reducer';\nimport PrivateRouteComponent from './routes/privateRoute';\nimport PublicRouteComponent from './routes/publicRoute';\nimport Dialog from './components/Dialog'\nimport Loading from './components/Loading';\nimport DatePicker from './components/DatePicker';\nimport CardDetailComponent from './components/CardDetailComponent';\n\nconst App: React.FC = () => {\n\n  const isLoggedIn: boolean = useSelector((state: ReducerStateType) => state.user.isLoggedIn)\n  const loading: boolean = useSelector((state: ReducerStateType) => state.loading.open)\n  const datePicker: boolean = useSelector((state: ReducerStateType) => state.datepicker.open)\n  const todayPrayDetail: boolean = useSelector((state: ReducerStateType) => state.todayPrayDetail.open)\n\n  if (isLoggedIn) {\n    return <>\n      <PrivateRouteComponent />\n      <Dialog />\n      {datePicker && <DatePicker />}\n      {todayPrayDetail && <CardDetailComponent />}\n      {loading && <Loading />}\n    </>\n  } else {\n    return <>\n      <PublicRouteComponent />\n      <Dialog />\n      {loading && <Loading />}\n    </>\n  }\n\n}\n\nexport default App;\n","import { ReducerUserType } from '../types/reducer'\nimport { USER_LOGIN, USER_LOGOUT } from '../actions/types'\n\ninterface ActionType {\n    type: string\n    token: string\n    user: ReducerUserType\n}\n\nconst initialState: ReducerUserType = {\n    isLoggedIn: localStorage.getItem('token') ? true : false,\n    email: \"\",\n    name: \"\",\n    phone: \"\",\n    authorities: []\n}\n\nexport default function (state: ReducerUserType = initialState, action: ActionType) {\n    switch (action.type) {\n        case USER_LOGIN:\n            return userLogin(state, action)\n        case USER_LOGOUT:\n            return userLogout(state, action)\n        default:\n            return state\n    }\n}\n\nfunction userLogout(state: ReducerUserType, action: ActionType): ReducerUserType {\n\n    localStorage.removeItem('token')\n    return {\n        isLoggedIn: false,\n        email: \"\",\n        name: \"\",\n        phone: \"\",\n        authorities: []\n    }\n}\n\nfunction userLogin(state: ReducerUserType, action: ActionType): ReducerUserType {\n    const { token, user } = action\n    const { email, name, phone, authorities } = user\n    localStorage.setItem('token', token)\n    return {\n        ...state,\n        isLoggedIn: true,\n        email,\n        name,\n        phone,\n        authorities\n    }\n}","import { ReducerDialogType } from \"../types/reducer\";\nimport { DIALOG_ON, DIALOG_OFF } from \"../actions/types\";\n\n\ninterface ActionType {\n    type: string\n    title: string\n    text: string\n    callBack?: (param: any) => void\n}\n\nconst initialState: ReducerDialogType = {\n    open: false,\n    title: \"\",\n    text: \"\",\n    callBack: () => { }\n}\n\nexport default function (state = initialState, action: ActionType) {\n    switch (action.type) {\n        case DIALOG_ON:\n            return dialogOn(state, action)\n        case DIALOG_OFF:\n            return dialogOff(state, action)\n        default:\n            return state;\n    }\n}\n\nfunction dialogOff(state: ReducerDialogType, action: ActionType): ReducerDialogType {\n    return {\n        open: false,\n        title: \"\",\n        text: \"\",\n        callBack: () => { }\n    }\n}\n\nfunction dialogOn(state: ReducerDialogType, action: ActionType): ReducerDialogType {\n    const { title, text, callBack } = action\n    return {\n        ...state,\n        open: true,\n        title,\n        text,\n        callBack: callBack ? callBack : () => { }\n    }\n}","import { ReducerLoadingType } from \"../types/reducer\";\nimport { LOADING_ON, LOADING_OFF } from \"../actions/types\";\n\ninterface ActionType {\n    type: string\n}\n\nconst initialState: ReducerLoadingType = {\n    open: false\n}\n\nexport default function (state: ReducerLoadingType = initialState, action: ActionType) {\n    switch (action.type) {\n        case LOADING_ON:\n            return loadingOn(state, action)\n        case LOADING_OFF:\n            return loadingOff(state, action)\n        default:\n            return state\n    }\n}\n\nfunction loadingOn(state: ReducerLoadingType, action: ActionType): ReducerLoadingType {\n    return {\n        ...state,\n        open: true\n    }\n}\n\nfunction loadingOff(state: ReducerLoadingType, action: ActionType): ReducerLoadingType {\n    return {\n        ...state,\n        open: false\n    }\n}","import { ReducerLeftNavigationBar } from \"../types/reducer\";\nimport { LEFT_NAV_OPEN, LEFT_NAV_CLOSE } from \"../actions/types\";\n\ninterface ActionType {\n    type: string\n}\n\nconst initialState: ReducerLeftNavigationBar = {\n    open: true,\n    first: true\n}\n\nexport default function (state = initialState, action: ActionType) {\n    switch (action.type) {\n        case LEFT_NAV_OPEN:\n            return openNav(state, action)\n        case LEFT_NAV_CLOSE:\n            return closeNav(state, action)\n\n        default:\n            return state\n    }\n}\n\nfunction openNav(state: ReducerLeftNavigationBar, action: ActionType): ReducerLeftNavigationBar {\n    return {\n        ...state,\n        open: true,\n        first: false\n    }\n}\n\nfunction closeNav(state: ReducerLeftNavigationBar, action: ActionType): ReducerLeftNavigationBar {\n    return {\n        ...state,\n        open: false,\n        first: false\n    }\n}\n\n\n","import { ReducerLocationType } from \"../types/reducer\";\n\ninterface ActionType {\n    type: string\n}\n\nconst initialState: ReducerLocationType = {\n    current: \"\"\n}\n\nexport default function (state = initialState, action: ActionType) {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}","import { ReducerWorkspaceType, CURRENT_TYPE } from \"../types/reducer\";\nimport { WORKSPACE_PUT_CURRENT } from '../actions/types'\n\ninterface ActionType {\n    type: string\n    newCurrent: CURRENT_TYPE\n}\n\nconst initialState: ReducerWorkspaceType = {\n    current: \"VIEW\"\n}\n\nexport default function (state = initialState, action: ActionType) {\n    switch (action.type) {\n        case WORKSPACE_PUT_CURRENT:\n            return putCurrent(state, action)\n        default:\n            return state\n    }\n}\n\nfunction putCurrent(state: ReducerWorkspaceType, action: ActionType): ReducerWorkspaceType {\n    const { newCurrent } = action\n    return {\n        ...state,\n        current: newCurrent\n    }\n}","import { ReducerTodayPray, ReducerTodayPrayStudentPrayType } from \"../types/reducer\";\nimport { TODAY_PRAY_FOR_POST_POST_STUDENT_PRAY, TODAY_PRAY_FOR_POST_DELETE_STUDENT_PRAY, TODAY_PRAY_FOR_POST_POST_TODAY_PRAY, TODAY_PRAY_FOR_POST_POST_ADS, TODAY_PRAY_FOR_POST_INIT } from \"../actions/types\";\n\ninterface ActionType {\n    type: string\n    studentPray: ReducerTodayPrayStudentPrayType\n    index: number\n    todayPrays: string[]\n    ads: string[]\n}\n\nconst initialState: ReducerTodayPray = {\n\n    studentPray: [],\n    ads: [],\n    todayPrayContent: []\n}\n\nexport default function (state: ReducerTodayPray = initialState, action: ActionType) {\n    switch (action.type) {\n        case TODAY_PRAY_FOR_POST_POST_STUDENT_PRAY:\n            return postStudentPray(state, action)\n\n        case TODAY_PRAY_FOR_POST_DELETE_STUDENT_PRAY:\n            return deleteStudentPray(state, action)\n\n        case TODAY_PRAY_FOR_POST_POST_TODAY_PRAY:\n            return postTodayPrays(state, action)\n\n        case TODAY_PRAY_FOR_POST_POST_ADS:\n            return postAds(state, action)\n\n        case TODAY_PRAY_FOR_POST_INIT:\n            return init(state, action)\n\n        default:\n            return state\n    }\n}\n\nfunction init(state: ReducerTodayPray, action: ActionType): ReducerTodayPray {\n    return {\n        studentPray: [],\n        ads: [],\n        todayPrayContent: []\n    }\n}\n\nfunction postAds(state: ReducerTodayPray, action: ActionType): ReducerTodayPray {\n    const { ads } = action;\n\n    return {\n        ...state,\n        ads\n    }\n}\n\n\nfunction postTodayPrays(state: ReducerTodayPray, action: ActionType): ReducerTodayPray {\n    const { todayPrays } = action\n    return {\n        ...state,\n        todayPrayContent: todayPrays\n    }\n}\n\nfunction deleteStudentPray(state: ReducerTodayPray, action: ActionType): ReducerTodayPray {\n    const { index } = action;\n    const updatedStudentPrays: ReducerTodayPrayStudentPrayType[] = state.studentPray.filter((data, i) => i !== index)\n    return {\n        ...state,\n        studentPray: updatedStudentPrays\n    }\n}\n\nfunction postStudentPray(state: ReducerTodayPray, action: ActionType): ReducerTodayPray {\n    const { studentPray } = action\n    return {\n        ...state,\n        studentPray: [\n            ...state.studentPray,\n            studentPray\n        ]\n    }\n}","import { ReducerTodayPrayForViewType, ReducerTodayPrayForViewPraysType } from \"../types/reducer\";\nimport { TODAY_PRAY_FOR_VIEW_GET_PRAYS, TODAY_PRAY_FOR_VIEW_INIT } from \"../actions/types\";\n\ninterface ActionType {\n    type: string\n    prays: ReducerTodayPrayForViewPraysType[]\n    praysCount: number\n}\n\nconst initialState: ReducerTodayPrayForViewType = {\n    prays: [],\n    praysCount: 0\n}\n\nexport default function (state: ReducerTodayPrayForViewType = initialState, action: ActionType) {\n    switch (action.type) {\n        case TODAY_PRAY_FOR_VIEW_GET_PRAYS:\n            return getPrays(state, action)\n        case TODAY_PRAY_FOR_VIEW_INIT:\n            return init(state, action)\n        default:\n            return state\n    }\n}\n\nfunction init(state: ReducerTodayPrayForViewType, action: ActionType): ReducerTodayPrayForViewType {\n    return {\n        prays: [],\n        praysCount: 0\n    }\n}\n\nfunction getPrays(state: ReducerTodayPrayForViewType, action: ActionType): ReducerTodayPrayForViewType {\n    const { prays, praysCount } = action\n    return {\n        ...state,\n        prays: [\n            ...state.prays,\n            ...prays\n        ],\n        praysCount\n    }\n}\n","import { ReducerDatePickerType } from \"../types/reducer\";\nimport { DATEPICKER_OPEN, DATEPICKER_CLOSE } from \"../actions/types\";\n\ninterface ActionType {\n    type: string\n}\n\nconst initialState: ReducerDatePickerType = {\n    open: false\n}\n\nexport default function (state = initialState, action: ActionType) {\n    switch (action.type) {\n        case DATEPICKER_OPEN:\n            return openDatePicker(state, action)\n        case DATEPICKER_CLOSE:\n            return closeDatePicker(state, action)\n        default:\n            return state\n    }\n}\n\nfunction openDatePicker(state: ReducerDatePickerType, action: ActionType): ReducerDatePickerType {\n    return {\n        ...state,\n        open: true\n    }\n}\n\nfunction closeDatePicker(state: ReducerDatePickerType, action: ActionType): ReducerDatePickerType {\n    return {\n        ...state,\n        open: false\n    }\n}","import { ReducerTodayPrayDetailType } from \"../types/reducer\";\nimport { TODAY_PRAY_DETAIL_OPEN, TODAY_PRAY_DETAIL_CLOSE } from \"../actions/types\";\n\ninterface ActionType {\n    type: string\n    id: string\n}\n\nconst initialState: ReducerTodayPrayDetailType = {\n    open: false,\n    id: \"\"\n}\n\nexport default function (state: ReducerTodayPrayDetailType = initialState, action: ActionType) {\n    switch (action.type) {\n\n        case TODAY_PRAY_DETAIL_OPEN:\n            return open(state, action)\n        case TODAY_PRAY_DETAIL_CLOSE:\n            return close(state, action)\n\n        default:\n            return state\n    }\n}\n\nfunction open(state: ReducerTodayPrayDetailType, action: ActionType): ReducerTodayPrayDetailType {\n\n    const { id } = action\n\n    return {\n        ...state,\n        open: true,\n        id\n    }\n}\n\nfunction close(state: ReducerTodayPrayDetailType, action: ActionType): ReducerTodayPrayDetailType {\n    return {\n        ...state,\n        open: false,\n        id: \"\"\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport user from './user'\nimport dialog from './dialog'\nimport loading from './loading'\nimport leftNavigationBar from './leftNavigationBar'\nimport location from './location'\nimport workspace from './workspace'\nimport todayPrayForPost from './todayPrayForPost'\nimport todayPrayForView from './todayPrayForView'\nimport datepicker from './datepicker'\nimport todayPrayDetail from './todayPrayDetail'\n\nconst intialState = {}\n\nconst allReducers = combineReducers({\n    user,\n    dialog,\n    loading,\n    leftNavigationBar,\n    location,\n    workspace,\n    todayPrayForPost,\n    todayPrayForView,\n    datepicker,\n    todayPrayDetail\n})\n\n// @ts-ignore\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(allReducers, intialState, composeEnhancer(applyMiddleware(thunk)))\n\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './reducer'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n\n"],"sourceRoot":""}